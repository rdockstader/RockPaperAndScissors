@page "/"
@using System.Timers
@using RockPaperAndScissors.Helpers 
@implements IDisposable

<h1>Rock, Paper and Scissors</h1>

@if (!string.IsNullOrEmpty(resultMessage))
{
    <h3 style="color: @resultMessageColor">@resultMessage</h3>
}

<button class="btn btn-info" @onclick="PlayAgain">Play Again</button>

<div style="display: flex; justify-content: space-around; margin-bottom: 20px;">
    <img src="@opponentHand.Image" class="image" />

</div>

<div style="display: flex; justify-content: center;">
    @foreach (var hand in hands)
    {
        <img src="@hand.Image" class="image selectable-image" @onclick="@(() => SelectHand(hand))" />
    }
</div>


@code{
    List<Hand> hands = new List<Hand>()
    {
        new Hand
        {
            Selection = OptionRPS.Paper,
            LosesAgainst = OptionRPS.Scissors,
            WinsAgainst = OptionRPS.Rock,
            Image = "/img/paper.jpg"
        },
        new Hand
        {
            Selection = OptionRPS.Rock,
            LosesAgainst = OptionRPS.Paper,
            WinsAgainst = OptionRPS.Scissors,
            Image = "/img/rock.jpg"
        },
        new Hand
        {
            Selection = OptionRPS.Scissors,
            LosesAgainst = OptionRPS.Rock,
            WinsAgainst = OptionRPS.Paper,
            Image = "/img/scissors.jpg"
        }
    };
    Timer timer;
    Hand opponentHand;
    int indexOponentHand = 0;
    string resultMessage = string.Empty;
    string resultMessageColor = string.Empty;

    protected override void OnInitialized()
    {
        opponentHand = hands[0];
        timer = new Timer();
        timer.Interval = 100;
        timer.Elapsed += TimerOnElapsed;
        timer.Start();

        base.OnInitialized();
    }


    private void TimerOnElapsed(object sender, ElapsedEventArgs e)
    {
        indexOponentHand = (indexOponentHand + 1) % hands.Count;
        opponentHand = hands[indexOponentHand];
        StateHasChanged();
    }

    private void SelectHand(Hand hand)
    {
        timer.Stop();
        var result = hand.PlayAgainst(opponentHand);

        if(result == GameStatus.Victory)
        {
            resultMessage = "You won!";
            resultMessageColor = "Green";
        }
        else if (result == GameStatus.Loss)
        {
            resultMessage = "You Lost!";
            resultMessageColor = "Red";
        }
        else
        {
            resultMessage = "draw";
            resultMessageColor = "Black";
        }
    }

    private void PlayAgain()
    {
        timer.Start();
        resultMessage = string.Empty;
    }

    public void Dispose()
    {
        if(timer != null)
        {
            timer.Dispose();
        }
    }
}